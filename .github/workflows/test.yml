on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set env vars
      run: |
        source ci/rust-version.sh
        echo "RUST_STABLE=$rust_stable" >> $GITHUB_ENV
        source ci/solana-version.sh
        echo "SOLANA_VERSION=$solana_version" >> $GITHUB_ENV

    - if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev

    - uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ env.RUST_STABLE }}
        override: true
        profile: minimal
        components: rustfmt, clippy

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
        key: cargo-build-${{ hashFiles('**/Cargo.lock') }}-${{ env.RUST_STABLE}}

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/rustfilt
        key: cargo-bpf-bins-${{ runner.os }}

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache
        key: solana-${{ env.SOLANA_VERSION }}

    - name: Install dependencies
      run: |
        ./ci/install-build-deps.sh
        ./ci/install-program-deps.sh
        echo "$HOME/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

    - name: cargo fmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: --all -- --check

    - name: cargo clippy
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --workspace --all-targets -- --deny=warnings

    - name: Build and test
      run: ./ci/cargo-test-bpf.sh program

    - name: Upload programs
      uses: actions/upload-artifact@v2
      with:
        name: token-programs
        path: "target/deploy/*.so"
        if-no-files-found: error
